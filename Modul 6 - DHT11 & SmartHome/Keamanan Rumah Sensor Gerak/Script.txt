#include <MPU6050_tockn.h>
#include <Wire.h>
#include <WiFi.h>  // Add Wi-Fi library
#include <HTTPClient.h>
#include "soc/soc.h"
#include "soc/rtc_cntl_reg.h"

MPU6050 mpu(Wire);

const char* ssid = "Kamardepan";  // Replace with your Wi-Fi network SSID
const char* password = "2023september19";  // Replace with your Wi-Fi network password
const char* serverName = "http://192.168.1.10/pirdasmodul6/mpu6050.php";

int16_t ax, ay, az;
int16_t gx, gy, gz;

const float threshold = 10.0; // Ambang sudut perubahan
const int buzzerPin = 5; // Pin buzzer
const int ledPin = 15; // Pin LED

void setup() {
  Wire.begin();
  mpu.begin();
  mpu.calcGyroOffsets(true);
  Serial.begin(9600);

  pinMode(buzzerPin, OUTPUT);
  pinMode(ledPin, OUTPUT);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
}

void loop() {
  mpu.update();
  
  int16_t gxNew = mpu.getGyroX();
  int16_t gyNew = mpu.getGyroY();
  int16_t gzNew = mpu.getGyroZ();
  
  float angleX = atan2(gxNew, sqrt(gyNew * gyNew + gzNew * gzNew)) * 180 / PI;
  float angleY = atan2(gyNew, sqrt(gxNew * gxNew + gzNew * gzNew)) * 180 / PI;

  String status_sensor;

  if (abs(angleX) > threshold) {
    if (angleX > 0) {
      // Sudut ke kanan; // Bunyi dengan frekuensi 1000 Hz
      Serial.println("Sudut ke kanan");
      status_sensor = "Kanan";
      digitalWrite(buzzerPin, HIGH);
      digitalWrite(ledPin, LOW);
    } else {
      // Sudut ke kiri // Bunyi dengan frekuensi 500 Hz
      Serial.println("Sudut ke kiri");
      status_sensor = "Kiri";
      digitalWrite(buzzerPin, HIGH);
      digitalWrite(ledPin, LOW);
    }
  } else if (abs(angleY) > threshold) {
    if (angleY > 0) {
      // Sudut ke belakang // Bunyi dengan frekuensi 800 Hz
      Serial.println("Sudut ke belakang");
      status_sensor = "Belakang";
      digitalWrite(buzzerPin, HIGH);
      digitalWrite(ledPin, LOW);
    } else {
      // Sudut ke depan// Bunyi dengan frekuensi 300 Hz
      Serial.println("Sudut ke depan");
      status_sensor = "Depan";
      digitalWrite(buzzerPin, HIGH);
      digitalWrite(ledPin, LOW);
    }
  } else {
    Serial.println("Sudut normal");
    // Matikan bunyi jika tidak ada perubahan sudut
    status_sensor = "Normal";
    digitalWrite(ledPin, HIGH);
    digitalWrite(buzzerPin, LOW);
  }

  String url = serverName;
  url += "?status_sensor=";
  url += status_sensor;


  HTTPClient http;
  http.begin(url);
  int httpResponseCode = http.POST("status_sensor" + status_sensor);
  if (httpResponseCode == 200) {
    Serial.println("Data sent successfully!");
  } else {
    Serial.print("Error code: ");
    Serial.println(httpResponseCode);
  }
  
  http.end();
  delay(2000);
}
